"use strict";(self.webpackChunkgotrongluan=self.webpackChunkgotrongluan||[]).push([[548],{6605:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/how-to-create-github-pages","metadata":{"permalink":"/vi/2023/how-to-create-github-pages","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023/how-to-create-github-pages/index.md","source":"@site/blog/2023/how-to-create-github-pages/index.md","title":"How to create your github.io page","description":"Simple guide how to create your github.io page","date":"2023-01-23T11:24:43.000Z","formattedDate":"23 th\xe1ng 1, 2023","tags":[],"readingTime":1.8,"hasTruncateMarker":true,"authors":[{"name":"Luan Nguyen Trong","title":"Senior FE Engineer @ Shopee","url":"https://github.com/gotrongluan","imageURL":"https://github.com/gotrongluan.png","key":"gotrongluan"}],"frontMatter":{"title":"How to create your github.io page","description":"Simple guide how to create your github.io page","authors":"gotrongluan","tag":"github-pages"},"nextItem":{"title":"Finally, I have a blog site","permalink":"/vi/2023/01/23/finally-i-have-a-blog-site"}},"content":"What should you do to have your personal github.io page, check my blog!\\n\\n\x3c!--truncate--\x3e\\n\\nAs a software engineer, we should have our personal blog page, to make companies impress about us. You can choose lots of options to write and deploy your blog. For me, I used **Docusaurus** to write my blog, and use **Github Pages** to host it. This article will show you the simple way to create your github page.\\n\\n## Create a public repository\\nOpen [github.com/new](https://github.com/new) to create a new public repository. Give it the name `<your_name>.github.io`.\\n\\n## Publish your code to the repository\\nAfter your `<your_name>.github.io` repository is created, jumping to the **Code** tab in repository detail page. Then, you can follow the instructions to publish your code to the repo.\\n\\n![Guide](./assets/git_guide.png)\\n\\nMostly, your personal website includes HTML, CSS and Javascript. These can be result after building your application by running `yarn build` (you can have a React with Webpack config, or Docusaurus project before). Make sure the `index.html` file as the root of the repo.\\n\\n## Specify the deployed branch\\nYou have to decide which branch your code will be deployed. For example, you can have multiple branches `master`, `test` and `draft`, but you deploy the `master` branch only. Choose one branch as deploy branch and come to the next step!\\n\\n## Set the deployed branch\\nOpen repository detail page and click the **Settings** tab. Under **Code and automation** section, click on the **Pages** item. You will see a similar image like this is shown\\n\\n![Pages Setting](./assets/git_page_guide.png)\\n\\nUnder **Build and deployment** section:\\n- **Source**: Choose `Deploy from a branch`\\n- **Branch**: Select the `branch` and `folder` to serve your static files\\n\\n:::info\\nAssume you set `branch` as `master`, and set `folder` as `/docs`, then the files under the `/docs` folder of your `master` branch code will be your website files, and the root index HTML file is `/docs/index.html`\\n:::\\n\\n## Visit your website\\nNow, you can see your website at the link `https://<your_name>.github.io/`, sometimes after you deploy the code, your changes haven\'t been affected immediately, you can wait some minutes (up to 10 minutes according this [doc](https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site)).\\n\\n## Next step\\nLearn more about [Github pages](https://docs.github.com/en/pages)"},{"id":"/2023/01/23/finally-i-have-a-blog-site","metadata":{"permalink":"/vi/2023/01/23/finally-i-have-a-blog-site","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023/01/23/finally-i-have-a-blog-site/index.md","source":"@site/blog/2023/01/23/finally-i-have-a-blog-site/index.md","title":"Finally, I have a blog site","description":"I chose Docusaurus to implement my blog site, it\'s a great tool","date":"2023-01-23T00:00:00.000Z","formattedDate":"23 th\xe1ng 1, 2023","tags":[{"label":"hello","permalink":"/vi/tags/hello"}],"readingTime":0.44,"hasTruncateMarker":true,"authors":[{"name":"Luan Nguyen Trong","title":"Senior FE Engineer @ Shopee","url":"https://github.com/gotrongluan","imageURL":"https://github.com/gotrongluan.png","key":"gotrongluan"}],"frontMatter":{"title":"Finally, I have a blog site","description":"I chose Docusaurus to implement my blog site, it\'s a great tool","authors":"gotrongluan","tags":["hello"]},"prevItem":{"title":"How to create your github.io page","permalink":"/vi/2023/how-to-create-github-pages"},"nextItem":{"title":"Some insights about Docusaurus","permalink":"/vi/2023/01/23/some-thinkings-about-docusaurus"}},"content":"Welcome to **gotrongluan**\'s blog. This blog is created with [**Docusaurus 2**](https://docusaurus.io/)\\n\\n\x3c!--truncate--\x3e\\n\\nToday is the 2nd day of the lunar new year. I decided to start my own blog. My goal is to blog to remember what I\'ve learned, as well as a place to demonstrate my abilities.\\n\\nWhat I learned and the knowledge from my own perspective will be written in this blog site. I promise that everything I write is from my own words and thoughts, not copied from any source.\\n\\nHappy Lunar New Year 2023!"},{"id":"/2023/01/23/some-thinkings-about-docusaurus","metadata":{"permalink":"/vi/2023/01/23/some-thinkings-about-docusaurus","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023/01/23/some-thinkings-about-docusaurus/index.md","source":"@site/blog/2023/01/23/some-thinkings-about-docusaurus/index.md","title":"Some insights about Docusaurus","description":"My personal thinkings after learning Docusaurus and building the blog page in 4 hours","date":"2023-01-23T00:00:00.000Z","formattedDate":"23 th\xe1ng 1, 2023","tags":[{"label":"Docusaurus","permalink":"/vi/tags/docusaurus"}],"readingTime":6.3,"hasTruncateMarker":true,"authors":[{"name":"Luan Nguyen Trong","title":"Senior FE Engineer @ Shopee","url":"https://github.com/gotrongluan","imageURL":"https://github.com/gotrongluan.png","key":"gotrongluan"}],"frontMatter":{"title":"Some insights about Docusaurus","description":"My personal thinkings after learning Docusaurus and building the blog page in 4 hours","authors":"gotrongluan","tags":["Docusaurus"]},"prevItem":{"title":"Finally, I have a blog site","permalink":"/vi/2023/01/23/finally-i-have-a-blog-site"}},"content":"What do I think about Docusaurus after building my blog page with it :D\\n\\n\x3c!--truncate--\x3e\\n\\n## What is Docusaurus?\\n[**Docusaurus**](https://docusaurus.io/) is a Facebook open-source framework allow you to build a content-centric website, such as document site, personal blog, landing page... with a fast, eligible and good developer experience way. It supports lots of out-of-the-box features to help you do that.\\n\\n## Some notable things about Docusaurus\\n\\n### Easily create a new project\\nI can easily create a `Docusaurus` project by using the `create-docusaurus` cli:\\n\\n```bash\\nyarn create docusaurus <project_name> classic --typescript\\n```\\n\\nThis command scaffolds the Docusaurus project. It does some set up like:\\n- Set up some configurations like `tsconfig.json`, `package.json`, `babel.config.js`\\n- Install neccessary dependencies\\n- Create a default `docusaurus.config.js` file\\n- Add a `.gitignore` file\\n- Create example folders and files like `src/pages`, `blog` or `docs`\\n- Inside `package.json`, it creates some commands `start`, `build` and `deploy`\\n- It sets up css module out of the box\\nand more\\n\\n### Start writing documents and test locally immediately\\nAfter scaffolding the project, you can start to write your documents or blogs immediately without any extra efforts to set up or install. You can run `yarn start` to start the development server and play with it.\\n\\nDocusaurus uses HMR technique, so any changes to your project will reload your local server immediately. \\n\\n### Good concepts\\nWith Docusaurus, you can create:\\n- Document pages\\n- Blog posts\\n- Non-document pages\\n\\nThese document types are almost enough when you want to create a content-centric website, and they\'re supported well by Docusaurus.\\n\\n### Good and intutive folder structure\\nAfter scaffolding the project, you can look at the folder structure and see that it\'s organized very clear and well:\\n- `docs` contains document pages\\n- `blog` contains blog posts\\n- `src/pages` contains custom pages\\n- `static` contains static assets like images, files\\n\\nThen, you can add a blog Markdown file inside the `blog` folder with name `2023-01-23-hello.md` or `2023/01/23/hello.md`, Docusaurus will generate the that blog page detail, attached with a readable link and especially it shows the blog date as `2023-01-23`. The detail way it resolves the blog post date can be founded [here](https://google.com).\\n\\nYou can add a file `helloWorld.js` or `helloWorld/index.js` or `helloWorld.md` under the `src/pages` folder, Docusaurus will use that JSX/Markdown file to generate a custom page, with the route path as `/helloWorld` (same with folder/file name). This route generation technique is not new but it\'s very cool and it helps us create pages very fast.\\n\\n### Automatically build blog pages\\nWhich I very love about Docusaurus when building my blog page is I just need to focus on the content of the blog, and let Docusaurus do other things.\\n\\nWhat I just do is creating a **Markdown** file, give it a name, put the content inside and specify a date for its file name. Then, Docusarus will automatically generate:\\n- A blog posts page with pagination, each post card shows a truncated version of blog content\\n- A blog post detail page with metadata like `title`, `date`, `author`...\\n- A **Recent posts** sidebar\\n\\nAnd of course, I can customize the way Docusaurus generate above things for me, like pagination size for blog posts list page, or number of recent posts show in the sidebar.\\n\\n### Easy to custom and config\\nBecause my website is just a blog site, I don\'t use the **document** feature of Docusaurus. To disable **document**, I can easily specify `docs: false` in the options object of the `classic` preset (inside `docusaurus.config.js` file), and then remove the `docs` folder.\\n\\nMoreover, I can custom the navigation bar data or footer data by changing `themeConfig` field inside the `docusaurus.config.js` file. The change will be affected immediately with HMR. Docusaurus will render a beautiful navigation bar and footer, I don\'t need to add any HTML or CSS code!\\n\\nMore configuration can be found [here](https://docusaurus.io/docs/configuration)\\n\\n### Powerful front matter in markdown\\nAt the top of markdown file, you can specify the metadata of the page like `title`, `description`, `slug` or `author`. For example, this is the `front matter` of this blog page\\n\\n```markdown\\n---\\ntitle: Some Thinkings about Docusaurus 2\\ndescription: My personal thinkings after learning Docusaurus and building the blog page in 4 hours\\nauthors: gotrongluan\\ntags: [Docusaurus]\\n---\\n```\\n\\nBecause this is a blog page, so below this `front matter`, I can also set the **truncated** content of this blog, to show in the blog list page. You can use this feature to write summary of your blog post.\\n\\n```markdown\\n---\\ntitle: Some Thinkings about Docusaurus 2\\ndescription: My personal thinkings after learning Docusaurus and building the blog page in 4 hours\\nauthors: gotrongluan\\ntags: [Docusaurus]\\n---\\n\\nThis is summary of the blog post, this blog is about Docusaurus 2.\\n\\n\x3c!--truncated--\x3e\\n```\\n\\nRemember to use the dedicated comment `\x3c!--truncated--\x3e`, only content above this comment and below the `front matter` will be the summary of the blog.\\n\\n### Global authors mapping file\\nOne of the cool feature I like most in Docusaurus is the global authors mapping file, located at `authors.yml`. Here is an example:\\n\\n```yml\\ngotrongluan:\\n  name: Luan Nguyen Trong\\n  title: Senior FE Engineer @ Shopee\\n  url: https://github.com/gotrongluan\\n  image_url: https://github.com/gotrongluan.png\\n```\\n\\nThis file creates the global `gotrongluan` author, and you can refer it in the `front matter` section, by specify just `gotrongluan` name\\n\\n```markdown\\n---\\nauthors: gotrongluan\\n---\\n```\\n\\nThe result is a lovely author card like this\\n\\n![Author Example](./assets/author_example.png)\\n\\n\\n### Other good points\\nBeside those above points, there\'re still more good things which Docusaurus brings to us.\\n- Good code conventions: You can read more about Docusaurus document to know more about recommended ways to create blogs or documents, recommended ways to orgarnize the code structure.\\n- Deploying easily and fast: You just only need to specify the github username, repo and branch (if you deploy to github page), and run the `yarn deploy` command, Docusaurus will help us to deploy our site.\\n- Building with multiple locales\\n- Providing powerful search feature\\n- Well and clear documentation\\n\\n## Conclusion\\nIn conclusion, I think Docusaurus is a very powerful and good framework to develop content-centric websites so far. I will use this tool for my blog for now and for document sites I\'ll build in the future, untils there\'s a better tool haha.\\n\\n:::tip\\nMy final keywords about Docusaurus:\\n- Help us develop content-centric websites fast\\n- Hot Module Reloading\\n- Good developer experience\\n- Powerful cli\\n- Easy to config, flexible, never block us to do anything\\n- Support both React and Markdown\\n- Route generation\\n- JAMStack architecture\\n- Static Site Generator (SSG) technique, prebuilt markup files\\n- Single page application with Client Side Rendering\\n:::\\n\\n## Next Steps\\nAfter inspecting my blog page built by Docusaurus, I found a interesting behavior.\\nIf I first come to the blog post `/finally-i-have-a-blog-site`, it fetches:\\n\\n1. **Development** mode:\\n- `finally-i-have-a-blog-site/index.html` file like a SPA `index.html` file\\n- Some JS files, and there\'s a JS file to render the `finally-i-have-a-blog-site` page\\n- When hovering the menu side bar, hovering the `Some insights about Docusaurus`, it loads the JS file `content---2023-01-23-some-thinkings-about-docusaurus-62-d-4c3.js`, this file looks like it render the content of the `Some insights about Docusaurus` blog post (CSR).\\n- When navigating to the `Some insights about Docusaurus` blog, no HTML file is loaded, seems the JS file above will render the content.\\n\\n2. **Production** mode\\nNothing different with the **development** mode except the `finally-i-have-a-blog-site/index.html` file, it is embedded with content of the blog, for better performance (first contentful bit rendered faster).\\n\\nI will investigate more about this behavior of Docusaurus!"}]}')}}]);